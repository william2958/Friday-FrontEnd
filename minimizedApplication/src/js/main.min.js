!function(){"use strict";angular.module("common",["ngCookies","ngMaterial"]).constant("ApiPath","http://localhost:3000")}(),function(){"use strict";angular.module("dashboard",["ui.router","ngAnimate","common"])}(),function(){"use strict";angular.module("authorization",["ui.router","common"])}(),function(){"use strict";angular.module("info",["ui.router","common"])}(),function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode(!0),$urlRouterProvider.otherwise("/"),$stateProvider.state("authorization",{abstract:!0,templateUrl:"src/authorization/authorization.html"}).state("authorization.login",{url:"/",templateUrl:"src/authorization/login/login.html",controller:"LoginController",controllerAs:"login"}).state("authorization.signup",{templateUrl:"src/authorization/signup/signup.html",controller:"SignupController",controllerAs:"signup"}).state("authorization.confirmemail",{url:"/confirm_email/:tokenParam",controller:"ConfirmEmailController",controllerAs:"confirmemail",resolve:{myData:["$stateParams",function($stateParams){return $stateParams.tokenParam}]}}).state("authorization.forgotpassword",{templateUrl:"src/authorization/password/forgotpassword.html",controller:"ForgotPasswordController",controllerAs:"forgot"}).state("authorization.changepassword",{url:"/changepassword/:tokenParam",templateUrl:"src/authorization/password/changepassword.html",controller:"ChangePasswordController",controllerAs:"change",resolve:{myData:["$stateParams",function($stateParams){return $stateParams.tokenParam}]}})}angular.module("authorization").config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";function DashboardController($state,$rootScope,AuthorizationService,$mdToast){function sanitizePosition(){var current=$ctrl.toastPosition;current.bottom&&last.top&&(current.top=!1),current.top&&last.bottom&&(current.bottom=!1),current.right&&last.left&&(current.left=!1),current.left&&last.right&&(current.right=!1),last=angular.extend({},current)}function showToastMessage(event,data){$ctrl.showSimpleToast(data.message)}var toastListener,$ctrl=this;$ctrl.$onInit=function(){AuthorizationService.getToken()?AuthorizationService.getUser(AuthorizationService.getToken()).success(function(resp){$ctrl.user=resp}).error(function(resp){AuthorizationService.signOut(),$state.go("authorization.login")}):$state.go("authorization.login"),toastListener=$rootScope.$on("dashboard:toast",showToastMessage)},$ctrl.handleSignOutBtnClick=function(){AuthorizationService.clearSuccess(),AuthorizationService.clearErrors(),AuthorizationService.addSuccess("Logged out."),AuthorizationService.signOut(),$state.go("authorization.login")};var last={bottom:!0,top:!1,left:!1,right:!0};$ctrl.toastPosition=angular.extend({},last),$ctrl.getToastPosition=function(){return sanitizePosition(),Object.keys($ctrl.toastPosition).filter(function(pos){return $ctrl.toastPosition[pos]}).join(" ")},$ctrl.showSimpleToast=function(message){var pinTo=$ctrl.getToastPosition();$mdToast.show($mdToast.simple().textContent(message).position(pinTo).hideDelay(1e3))},$ctrl.showActionToast=function(){var pinTo=$scope.getToastPosition(),toast=$mdToast.simple().textContent("Marked as read").action("UNDO").highlightAction(!0).highlightClass("md-accent").position(pinTo);$mdToast.show(toast).then(function(response){"ok"==response&&alert("You clicked the 'UNDO' action.")})}}angular.module("dashboard").controller("DashboardController",DashboardController),DashboardController.$inject=["$state","$rootScope","AuthorizationService","$mdToast"]}(),function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){$stateProvider.state("dashboard",{abstract:!0,templateUrl:"src/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"dashboard"}).state("dashboard.accounts",{templateUrl:"src/dashboard/accounts/accounts.html",controller:"AccountsController",controllerAs:"account"}).state("authorization.pin",{templateUrl:"src/dashboard/pin/pin.html",controller:"PinController",controllerAs:"pin"})}angular.module("dashboard").config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){$stateProvider.state("security",{url:"/about",templateUrl:"src/info/security/security.html",controller:"SecurityInfoController",controllerAs:"security"})}angular.module("info").config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function WheatleyController($state,$rootScope,$timeout,AuthorizationService){function outsideRingRotate(){OutsideRing.transform("r0,150,150"),OutsideRing.animate({transform:"r360,150,150"},3e4,outsideRingRotate)}function insideRingRotate(){InsideRing.transform("r0,150,150"),InsideRing.animate({transform:"r360,150,150"},23e3,insideRingRotate)}function statusRingRotate(){StatusRing.transform("r0,150,150"),StatusRing.animate({transform:"r-360,150,150"},2e4,statusRingRotate)}function resetRingColors(){InsideRing.animate({fill:"#1DCAFF"},100),OutsideRing.animate({stroke:"#0084B4",fill:"#0084B4"},100),ComplementaryRing.animate({fill:"#41ACD7"},100),DashedRing.animate({stroke:"#1DCAFF"},100),CoreRing.animate({stroke:"#76cee5"},100)}function onWheatleyRespond(event,data){0===data.code?(DashedRing.animate({transform:"s1.05, 150, 150"},10),CoreRing.animate({transform:"s1.05,150,150"},10,function(){CoreRing.animate({transform:"s1,150,150"},10),DashedRing.animate({transform:"s1, 150, 150"},10)})):1===data.code?(InsideRing.animate({fill:"#FFA500"},50),DashedRing.animate({stroke:"orange"},50),OutsideRing.animate({stroke:"#FF7538",fill:"#FF7538"},50),ComplementaryRing.animate({fill:"#FF8C00"},50),CoreRing.animate({stroke:"#FBCEB1"},50)):2===data.code?(DashedRing.animate({stroke:"#1DCAFF"},50),InsideRing.animate({fill:"#62b231"},50),OutsideRing.animate({fill:"#6eb636",stroke:"#6eb636"},50,function(){resetRingColors()})):3===data.code?(DashedRing.animate({stroke:"#1DCAFF"},50),InsideRing.animate({fill:"red"},200),OutsideRing.animate({fill:"red",stroke:"red"},200,function(){resetRingColors()})):4===data.code?EntireRing.animate({transform:"s0.8,150,150"},100):5===data.code?EntireRing.animate({transform:"s1,150,150"},100):6===data.code?(DashedRing.animate({stroke:"#1DCAFF"},50),InsideRing.animate({fill:"#62b231"},50),OutsideRing.animate({fill:"#62b231",stroke:"#62b231"},50,function(){resetRingColors(),$rootScope.$broadcast("login:success",{code:1})})):7===data.code&&EntireRing.animate({transform:"s0.1,150,150"},100)}var responseListener,$ctrl=this,Wheatley=Snap("#Wheatley"),OutsideRing=(Wheatley.select("#outsidering"),Wheatley.select("#statusring_1_"),Wheatley.select("#outsidering")),InsideRing=(Wheatley.select("#outsideringwrapper"),Wheatley.select("#insidering_1_")),StatusRing=Wheatley.select("#statusring_1_"),ComplementaryRing=Wheatley.select("#complimentaryring"),CoreRing=Wheatley.select("#corering"),DashedRing=Wheatley.select("#dashedring"),EntireRing=Wheatley.select("#entirering");Wheatley.click(function(){AuthorizationService.getToken()?$state.go("dashboard.accounts"):$state.go("authorization.login")}),$ctrl.$onInit=function(){InsideRing.attr({fill:"#1DCAFF"}),OutsideRing.attr({stroke:"#0084B4",fill:"#0084B4"}),ComplementaryRing.attr({fill:"#41ACD7"}),DashedRing.attr({stroke:"#1DCAFF"}),CoreRing.attr({stroke:"#76cee5"}),responseListener=$rootScope.$on("wheatley:respond",onWheatleyRespond),$ctrl.wheatleyPulse()},$ctrl.$onDestroy=function(){responseListener()},$ctrl.wheatleyPulse=function(){statusRingRotate(),outsideRingRotate(),insideRingRotate()}}angular.module("common").component("wheatley",{templateUrl:"src/wheatley/wheatley.html",controller:WheatleyController}),WheatleyController.$inject=["$state","$rootScope","$timeout","AuthorizationService"]}(),function(){"use strict";function AuthorizationService($http,ApiPath,$cookies){var service=this;service.errors=[],service.success=[],service.addError=function(error){service.errors.push(error)},service.getErrors=function(){return service.errors},service.clearErrors=function(){service.errors=[]},service.addSuccess=function(success){service.success.push(success)},service.getSuccess=function(){return service.success},service.clearSuccess=function(){service.success=[]},service.signIn=function(data){return $http.post(ApiPath+"/sign_in",data)},service.signUp=function(data){return $http.post(ApiPath+"/sign_up",data)},service.signOut=function(){$cookies.remove("token")},service.getToken=function(){return $cookies.get("token")},service.setToken=function(token){$cookies.put("token",token)},service.getUser=function(token){return $http({method:"GET",url:ApiPath+"/user",headers:{Authorization:token}})},service.getAccounts=function(token){return $http({method:"GET",url:ApiPath+"/accounts",headers:{Authorization:$cookies.get("token")}})},service.addAccount=function(data){return $http({method:"POST",url:ApiPath+"/accounts",data:data,headers:{Authorization:$cookies.get("token")}})},service.editAccount=function(data){return $http({method:"POST",url:ApiPath+"/accounts_edit",data:data,headers:{Authorization:$cookies.get("token")}})},service.deleteAccount=function(accountid){return $http({method:"POST",url:ApiPath+"/accounts_delete",data:accountid,headers:{Authorization:$cookies.get("token")}})},service.confirmEmail=function(token){return $http({method:"POST",url:ApiPath+"/confirm_email",data:token})},service.requestPasswordReset=function(data){return $http({method:"GET",url:ApiPath+"/forgot_password",params:data})},service.changePassword=function(data){return $http({method:"POST",url:ApiPath+"/change_password",data:data})}}angular.module("common").service("AuthorizationService",AuthorizationService),AuthorizationService.$inject=["$http","ApiPath","$cookies"]}(),function(){"use strict";function ConfirmEmailController($state,AuthorizationService,myData){var $ctrl=this;$ctrl.$onInit=function(){var config={confirm_token:myData};AuthorizationService.clearSuccess(),$ctrl.success=[],AuthorizationService.clearErrors(),$ctrl.errors=[],AuthorizationService.confirmEmail(config).then(function(resp){AuthorizationService.addSuccess(resp.data.message),$state.go("authorization.login")}).catch(function(resp){AuthorizationService.addError("Email was not successfully confirmed"),$state.go("authorization.login")})}}angular.module("authorization").controller("ConfirmEmailController",ConfirmEmailController),ConfirmEmailController.$inject=["$state","AuthorizationService","myData"]}(),function(){"use strict";function LoginController($state,$rootScope,$timeout,AuthorizationService){function onLoginSuccess(event,data){$state.go("authorization.pin")}var $ctrl=this;$ctrl.enteredLoginForm={},$ctrl.validationerrors=!1;var loginListenerSuccess;$ctrl.$onInit=function(){AuthorizationService.getToken()&&$state.go("dashboard.accounts"),$ctrl.errors=[],$ctrl.loading=!1,$ctrl.success=AuthorizationService.getSuccess(),$ctrl.errors=AuthorizationService.getErrors(),loginListenerSuccess=$rootScope.$on("login:success",onLoginSuccess),$ctrl.showforgotpassword=!1,$rootScope.$broadcast("wheatley:respond",{code:5})},$ctrl.$onDestroy=function(){loginListenerSuccess()},$ctrl.handleLoginBtnClick=function(){if($ctrl.loginForm.$valid){$rootScope.$broadcast("wheatley:respond",{code:1}),$ctrl.loading=!0;var config={email:$ctrl.enteredLoginForm.email,password:$ctrl.enteredLoginForm.password};AuthorizationService.signIn(config).then(function(resp){$ctrl.loading=!1;var token=resp.data.auth_token;AuthorizationService.setToken(token),$rootScope.$broadcast("wheatley:respond",{code:6})}).catch(function(resp){$ctrl.loading=!1,AuthorizationService.clearSuccess(),$ctrl.success=[],AuthorizationService.clearErrors(),$ctrl.errors=[],"error"==resp.data.status&&(AuthorizationService.addError(resp.data.message),$ctrl.errors=AuthorizationService.getErrors()),$rootScope.$broadcast("wheatley:respond",{code:3}),$ctrl.showforgotpassword=!0})}},$ctrl.keypressed=function(code){$rootScope.$broadcast("wheatley:respond",{code:0}),13===code.keyCode&&$ctrl.handleLoginBtnClick()}}angular.module("authorization").controller("LoginController",LoginController),LoginController.$inject=["$state","$rootScope","$timeout","AuthorizationService"]}(),function(){"use strict";function ChangePasswordController($state,AuthorizationService,myData){var $ctrl=this;$ctrl.updatePasswordForm={},$ctrl.passwords_match=!1,$ctrl.handleUpdatePasswordBtnClick=function(){if($ctrl.verifyPasswordForm.$valid)if($ctrl.updatePasswordForm.password===$ctrl.updatePasswordForm.password_confirmation){$ctrl.passwords_match=!1;var config={confirm_token:myData,password:$ctrl.updatePasswordForm.password};AuthorizationService.clearSuccess(),$ctrl.success=[],AuthorizationService.clearErrors(),$ctrl.errors=[],AuthorizationService.changePassword(config).then(function(resp){AuthorizationService.addSuccess(resp.data.message),$state.go("authorization.login")}).catch(function(resp){AuthorizationService.addError(resp.data.message),$state.go("authorization.login")})}else $ctrl.passwords_match=!0}}angular.module("authorization").controller("ChangePasswordController",ChangePasswordController),ChangePasswordController.$inject=["$state","AuthorizationService","myData"]}(),function(){"use strict";function ForgotPasswordController($state,AuthorizationService){var $ctrl=this;$ctrl.passwordResetForm={},$ctrl.handlePwdResetBtnClick=function(){if($ctrl.emailForm.$valid){$rootScope.$broadcast("wheatley:respond",{code:1});var config={email:$ctrl.passwordResetForm.email};AuthorizationService.clearSuccess(),$ctrl.success=[],AuthorizationService.clearErrors(),$ctrl.errors=[],AuthorizationService.requestPasswordReset(config).then(function(resp){AuthorizationService.addSuccess(resp.data.message),$state.go("authorization.login")}).catch(function(resp){AuthorizationService.addError(resp.data.message),$state.go("authorization.login")})}}}angular.module("authorization").controller("ForgotPasswordController",ForgotPasswordController),ForgotPasswordController.$inject=["$state","AuthorizationService"]}(),function(){"use strict";function SignupController($state,$rootScope,AuthorizationService){var $ctrl=this;$ctrl.registrationForm={},$ctrl.passwords_match=!1,$ctrl.$onInit=function(){$ctrl.loading=!1,$ctrl.errors=[],$rootScope.$broadcast("wheatley:respond",{code:4})},$ctrl.handleRegBtnClick=function(){if($ctrl.signupForm.$valid)if($ctrl.registrationForm.password===$ctrl.registrationForm.password_confirmation){AuthorizationService.clearSuccess(),AuthorizationService.clearErrors(),$ctrl.passwords_match=!1;var config={email:$ctrl.registrationForm.email,first_name:$ctrl.registrationForm.first_name,last_name:$ctrl.registrationForm.last_name,password:$ctrl.registrationForm.password};$ctrl.loading=!0,$rootScope.$broadcast("wheatley:respond",{code:1}),AuthorizationService.signUp(config).then(function(resp){$ctrl.loading=!1,$rootScope.$broadcast("wheatley:respond",{code:2}),AuthorizationService.addSuccess("User successfully registered."),AuthorizationService.addSuccess("Please confirm your account in your confirmation email."),AuthorizationService.clearErrors(),$state.go("authorization.login")}).catch(function(resp){$ctrl.loading=!1,"error"==resp.data.status&&($rootScope.$broadcast("wheatley:respond",{code:3}),AuthorizationService.addError(resp.data.message),$ctrl.errors=AuthorizationService.getErrors())})}else $ctrl.passwords_match=!0},$ctrl.handleCancelClick=function(){AuthorizationService.clearSuccess(),$ctrl.success=[],AuthorizationService.clearErrors(),$ctrl.errors=[],$state.go("authorization.login")},$ctrl.keypressed=function(code){$rootScope.$broadcast("wheatley:respond",{code:0}),13===code.keyCode&&$ctrl.handleRegBtnClick()}}angular.module("authorization").controller("SignupController",SignupController),SignupController.$inject=["$state","$rootScope","AuthorizationService"]}(),function(){"use strict";angular.module("dashboard").component("account",{templateUrl:"src/dashboard/account/account.html",bindings:{account:"<"},controller:"AccountController"})}(),function(){"use strict";function AccountController(AuthorizationService,AccountService,$rootScope,$mdDialog){var $ctrl=this;$ctrl.websiteClass="account_website",$ctrl.emailClass="account_email",$ctrl.inputType="password",$ctrl.buttonText="Show",$ctrl.editAccount=!1,$ctrl.preview_size="";var clipboard=new Clipboard(".copyButton");$ctrl.$onInit=function(){$ctrl.originalAccount=$ctrl.account.website,$ctrl.editedAccount=$ctrl.account.website.split(".")[0],$ctrl.account.website=$ctrl.editedAccount,clipboard.on("success",function(e){$rootScope.$broadcast("dashboard:toast",{message:"Copied!"}),e.clearSelection()}),clipboard.on("error",function(e){$rootScope.$broadcast("dashboard:toast",{message:"Error"})})},$ctrl.expandAccount=function(account){$ctrl.editAccountForm={},$ctrl.editAccountForm.email=$ctrl.account.email,$ctrl.editAccountForm.website=$ctrl.originalAccount,$ctrl.editAccountForm.password=$ctrl.account.password,$ctrl.editAccount||(account.showAccount=!account.showAccount,"account_website"===$ctrl.websiteClass?($ctrl.preview_size="preview_full",$ctrl.account.website=$ctrl.originalAccount,$ctrl.websiteClass="account_website_enlarged"):"account_website_enlarged"===$ctrl.websiteClass&&($ctrl.preview_size="",$ctrl.account.website=$ctrl.editedAccount,$ctrl.websiteClass="account_website"),"account_email"===$ctrl.emailClass?$ctrl.emailClass="account_email_enlarged":"account_email_enlarged"===$ctrl.emailClass&&($ctrl.emailClass="account_email"))},$ctrl.showPassword=function(){"password"==$ctrl.inputType?($ctrl.inputType="text",$ctrl.buttonText="Hide"):($ctrl.inputType="password",$ctrl.buttonText="Show")},$ctrl.toggleEditAccount=function(account){if($ctrl.showPassword(),$ctrl.editAccount)if($ctrl.editAccountForm.website!==$ctrl.account.website||$ctrl.editAccountForm.email!==$ctrl.account.email||$ctrl.editAccountForm.password!==$ctrl.account.password){var encryptedkey,config={website:$ctrl.editAccountForm.website,email:$ctrl.editAccountForm.email,password:$ctrl.editAccountForm.password,_id:account._id.$oid},pin=AccountService.getPin(),password=new buffer.SlowBuffer(pin.normalize("NFKC")),salt=new buffer.SlowBuffer("someSalt".normalize("NFKC")),N=512,r=8,p=1,dkLen=32;scrypt(password,salt,N,r,p,dkLen,function(error,progress,key){if(error)console.log("Error: "+error);else if(key){encryptedkey=key;var aesCtr=new aesjs.ModeOfOperation.ctr(encryptedkey,new aesjs.Counter(5)),encryptedBytes=aesCtr.encrypt(aesjs.util.convertStringToBytes(config.password)),encryptedPassword=encryptedBytes.toString();config.password=encryptedPassword,AuthorizationService.editAccount(config).then(function(response){$ctrl.account.website=$ctrl.editAccountForm.website,$ctrl.account.email=$ctrl.editAccountForm.email,$ctrl.account.password=$ctrl.editAccountForm.password,$ctrl.editAccount=!1})}})}else $ctrl.editAccount=!1;else $ctrl.editAccount=!0},$ctrl.removeAccount=function(account){var config={_id:account._id.$oid};AuthorizationService.deleteAccount(config).then(function(resp){$rootScope.$broadcast("account:delete",{refresh:!0})})},$ctrl.showConfirm=function(ev,account){if($ctrl.editAccount)$ctrl.editAccount=!1;else{var confirm=$mdDialog.confirm().title("Are you sure you want to delete this account?").textContent("This will permanently delete the data!").ariaLabel("Delete Account").targetEvent(ev).ok("I'm sure").cancel("Cancel").clickOutsideToClose(!0);$mdDialog.show(confirm).then(function(){$ctrl.removeAccount(account)})}}}angular.module("dashboard").controller("AccountController",AccountController),AccountController.$inject=["AuthorizationService","AccountService","$rootScope","$mdDialog"]}(),function(){"use strict";angular.module("dashboard").directive("ngSlideDown",["$timeout",function($timeout){var getTemplate,link;return getTemplate=function(tElement,tAttrs){return void 0!==tAttrs.lazyRender?"<div ng-if='lazyRender' ng-transclude></div>":"<div ng-transclude></div>"},link=function(scope,element,attrs,ctrl,transclude){var closePromise,duration,elementScope,emitOnClose,getHeight,hide,lazyRender,onClose,show;return duration=attrs.duration||1,elementScope=element.scope(),emitOnClose=attrs.emitOnClose,onClose=attrs.onClose,lazyRender=void 0!==attrs.lazyRender,lazyRender&&(scope.lazyRender=scope.expanded),closePromise=null,element.css({overflow:"hidden",transitionProperty:"height",transitionDuration:""+duration+"s",transitionTimingFunction:"ease-in-out"}),getHeight=function(passedScope){var c,children,height,_i,_len;for(height=0,children=element.children(),_i=0,_len=children.length;_i<_len;_i++)c=children[_i],height+=c.clientHeight;return""+height+"px"},show=function(){return closePromise&&$timeout.cancel(closePromise),lazyRender&&(scope.lazyRender=!0),element.css("height",getHeight())},hide=function(){if(element.css("height","0px"),emitOnClose||onClose||lazyRender)return closePromise=$timeout(function(){if(emitOnClose&&scope.$emit(emitOnClose,{}),onClose&&elementScope.$eval(onClose),lazyRender)return scope.lazyRender=!1},1e3*duration)},scope.$watch("expanded",function(value,oldValue){return $timeout(value?show:hide)}),scope.$watch(getHeight,function(value,oldValue){if(scope.expanded&&value!==oldValue)return $timeout(show)})},{restrict:"A",scope:{expanded:"=ngSlideDown"},transclude:!0,link:link,template:function(tElement,tAttrs){return getTemplate(tElement,tAttrs)}}}])}(),function(){"use strict";function AccountsController($state,$http,AccountService,AuthorizationService,$rootScope){function onAccountDelete(event,data){$ctrl.accounts=$ctrl.getAccounts()}var $ctrl=this;$ctrl.accounts={},$ctrl.newAccount={},$ctrl.showForm=!1,$ctrl.search="",$ctrl.slidervalue=8;var deleteListener,possible="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";$ctrl.$onInit=function(){""===AccountService.getPin(),$ctrl.accounts=$ctrl.getAccounts(),deleteListener=$rootScope.$on("account:delete",onAccountDelete)},$ctrl.getAccounts=function(){AuthorizationService.getAccounts().then(function(response){$ctrl.accounts=response.data.data.accounts;var encryptedkey,pin=AccountService.getPin(),password=new buffer.SlowBuffer(pin.normalize("NFKC")),salt=new buffer.SlowBuffer("someSalt".normalize("NFKC")),N=512,r=8,p=1,dkLen=32;scrypt(password,salt,N,r,p,dkLen,function(error,progress,key){error||key&&(encryptedkey=key,angular.forEach($ctrl.accounts,function(value,key){if($ctrl.accounts[key].password){var aesCtr=new aesjs.ModeOfOperation.ctr(encryptedkey,new aesjs.Counter(5)),decryptedPassword=JSON.parse("["+$ctrl.accounts[key].password+"]"),decryptedBytes=aesCtr.decrypt(decryptedPassword),decryptedText=aesjs.util.convertBytesToString(decryptedBytes);$ctrl.accounts[key].password=decryptedText}}))})})},$ctrl.submitNewAccount=function(){if($ctrl.addAccountForm.$valid){console.log($ctrl.newAccount);var encryptedkey,config={website:$ctrl.newAccount.website,email:$ctrl.newAccount.email,user_name:$ctrl.newAccount.username,password:$ctrl.newAccount.password},pin=AccountService.getPin(),password=new buffer.SlowBuffer(pin.normalize("NFKC")),salt=new buffer.SlowBuffer("someSalt".normalize("NFKC")),N=512,r=8,p=1,dkLen=32;scrypt(password,salt,N,r,p,dkLen,function(error,progress,key){if(error)console.log("Error: "+error);else if(key){encryptedkey=key;var aesCtr=new aesjs.ModeOfOperation.ctr(encryptedkey,new aesjs.Counter(5)),encryptedBytes=aesCtr.encrypt(aesjs.util.convertStringToBytes(config.password)),encryptedPassword=encryptedBytes.toString();config.password=encryptedPassword,AuthorizationService.addAccount(config).then(function(response){$ctrl.showForm=!$ctrl.showForm,$ctrl.accounts=$ctrl.getAccounts(),$ctrl.newAccount={}})}})}},$ctrl.handleAddAccountButtonClick=function(){$ctrl.showForm=!$ctrl.showForm},$ctrl.keypressed=function(code){13===code.keyCode&&$ctrl.submitNewAccount()},$ctrl.lengthChanged=function(){for(var text="",i=0;i<$ctrl.slidervalue;i++)text+=possible.charAt(Math.floor(Math.random()*possible.length));$ctrl.newAccount.password=text}}angular.module("dashboard").controller("AccountsController",AccountsController),AccountsController.$inject=["$state","$http","AccountService","AuthorizationService","$rootScope"]}(),function(){"use strict";function AccountService(PinService){var service=this;service.getPin=function(){return PinService.getPin()}}angular.module("dashboard").service("AccountService",AccountService),AccountService.$inject=["PinService"]}(),function(){"use strict";function PinController($state,$element,PinService,$rootScope,$timeout,AuthorizationService){var $ctrl=this;$ctrl.digit1="",$ctrl.digit2="",$ctrl.digit3="",$ctrl.digit4="",$ctrl.digit5="",$ctrl.digit6="";var digit1=$element.find("#digit1"),digit2=$element.find("#digit2"),digit3=$element.find("#digit3"),digit4=$element.find("#digit4"),digit5=$element.find("#digit5"),digit6=$element.find("#digit6");$ctrl.$onInit=function(){AuthorizationService.getToken()?AuthorizationService.getUser(AuthorizationService.getToken()).success(function(resp){$ctrl.user=resp,console.log($ctrl.user)}).error(function(resp){AuthorizationService.signOut(),$state.go("authorization.login")}):$state.go("authorization.login"),digit1.focus(),$ctrl.moreinfo=!1},$ctrl.digit1entered=function(){1===$ctrl.digit1.length&&digit2.focus()},$ctrl.digit2entered=function(){1===$ctrl.digit2.length&&digit3.focus()},$ctrl.digit3entered=function(){1===$ctrl.digit3.length&&digit4.focus()},$ctrl.digit4entered=function(){1===$ctrl.digit4.length&&digit5.focus()},$ctrl.digit5entered=function(){1===$ctrl.digit5.length&&digit6.focus()},$ctrl.digitEntered=function(){$rootScope.$broadcast("wheatley:respond",{code:0})},$ctrl.digitEnteredUp=function(){$ctrl.submitPin()},$ctrl.submitPin=function(){$ctrl.setPin()},$ctrl.setPin=function(){if(1===$ctrl.digit1.length&&1===$ctrl.digit2.length&&1===$ctrl.digit3.length&&1===$ctrl.digit4.length&&1===$ctrl.digit5.length&&1===$ctrl.digit6.length){var finalPin=$ctrl.digit1;finalPin+=$ctrl.digit2,finalPin+=$ctrl.digit3,finalPin+=$ctrl.digit4,finalPin+=$ctrl.digit5,finalPin+=$ctrl.digit6,PinService.setPin(finalPin),$rootScope.$broadcast("wheatley:respond",{code:7}),$timeout(function(){$state.go("dashboard.accounts")},50)}},$ctrl.showinfo=function(){$ctrl.moreinfo=!0}}angular.module("dashboard").controller("PinController",PinController),PinController.$inject=["$state","$element","PinService","$rootScope","$timeout","AuthorizationService"]}(),function(){"use strict";function PinService(){var service=this;service.pin="",service.getPin=function(){return service.pin},service.setPin=function(pin){service.pin=pin}}angular.module("dashboard").service("PinService",PinService)}(),function(){"use strict";function SecurityInfoController($rootScope,$location,$anchorScroll,$stateParams){}angular.module("info").controller("SecurityInfoController",SecurityInfoController),SecurityInfoController.$inject=["$rootScope","$location","$anchorScroll","$stateParams"]}(),function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){}angular.module("myApp",["ui.router","authorization","dashboard","info"]).config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider"]}();